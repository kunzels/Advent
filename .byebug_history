c
s
display mem
memAddress
s
ss
s
display temp[i]
s
display temp
s
display result
display queue
s
quit
s
display result
display queue
quit
s
display temp[i]
temp[i]
s
display result
display queue
address
s
display bitAddress
bitAddress
s
display mask
display temp
temp
value
address
mask
s
entry[1]
address
mask
address
s
entry
s
operation
s
operation
mask
s
current
s
portion
s
mem
data
quit
s
display movement
s
display waypointHor
display waypointVer
display northSouth
display eastWest
display facing
s
ss
s
display movement
s
display waypointHor
s
display waypoint hor
display waypointVer
display eastWest
display northSouth
display directions
display facing
s
ss
s
display amount
display move
display northSouth
display eastWest
display facing
display directions
display movement
s
display amount
display move
s
display movement
display northSouth
display eastWest
display directions
display facing
quit
data
quit
data
quit
s
display amount
display move
s
display movement
display northSouth
display eastWest
display directions
display facing
quit
s
undisplay data
display data
s
display num
display result
display ending
display starting
s
c
s
display num
s
c
s
display result
display ending
display starting
display upper
display lower
s
display i
display nums
quit
s
display tabbed
display i
c
quit
quot
s
display a
display data
s
display c
display i
s
display c
c
b
v
c
quit
s
display current
current
s
current - 1
current
s
display queue
display possibilities
s
display data
c
display memo
c
s
display target
display data
c
sc
s
c
cc
c
s
display memo
display target
display data
quit
s
display idx
s
display memo
display target
display data
s
display memo
display target
display data
c
quit
display memo
display target
display data
quit
c
s
display memo
display target
display data
s
display idx
s
display memo
display target
display data
c
s
display memo
display target
display data
c
s
display memo
display target
display data
s
display memo
display target
display data
quit
s
display memo
display target
display data
quit
test.index(1)
test.indexOf(1)
test.indefOf(1)
test = [1,2,3]
quit
data2.max
4".split("\n").map{|el| el.to_i}
12
6
19
7
11
1
5
15
10
data2 = "16
quit
test.max
test = [1,2,3]
quit
]
data[0..1
data = [1,2,3]
quit
122504099 + 168612228
quit
